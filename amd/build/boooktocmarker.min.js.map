{"version":3,"file":"boooktocmarker.min.js","sources":["../src/boooktocmarker.js"],"sourcesContent":["define(['jquery', 'core/ajax'], function($, Ajax) {\n    return {\n        init: function(params) {\n            const pageurl = window.location.pathname + window.location.search;\n         Ajax.call([{\n            methodname: 'block_revisionmanager_get_read_urls',\n            args: { courseid: params.courseid },\n            done: function(result) {\n                // Build a map: fullpath → ratingvalues[]\n                const urlRatingsMap = {};\n                result.entries.forEach(entry => {\n                    const cleanUrl = entry.pageurl.replace(/^\\/+/, ''); // remove leading slashes\n                    urlRatingsMap[cleanUrl] = entry.ratingvalues;\n                });\n\n                $('div.book_toc a').each(function() {\n                    const href = $(this).attr('href');\n                    const fullpath = 'mod/book/' + href;\n                    if (urlRatingsMap[fullpath]) {\n                        const ratings = urlRatingsMap[fullpath];\n\n                        // Build span-wrapped ratings with background classes\n                        const ratingHtml = ratings.map(rating => {\n                            const clampedRating = Math.max(0, Math.min(5, rating)); // Ensure 0–5\n                            return `<span class=\"bg-rating-toc-${clampedRating}\">${clampedRating}</span>`;\n                        }).join('');\n\n                        $(this).prepend(ratingHtml+' ');\n                    }\n                });\n\n              $('div.book_toc li:has(strong)').each(function() {\n                 const $strong = $(this).find('strong');\n                    var cleanUrl = pageurl.startsWith('/') ? pageurl.substring(1) : pageurl;\n                    if (!cleanUrl.includes(\"chapterid\")) {\n                        cleanUrl = cleanUrl + \"&chapterid=\"+params.chapterid;\n                    }\n\n                 if (urlRatingsMap[cleanUrl]) {\n                        const ratings = urlRatingsMap[cleanUrl];\n\n                        // Build span-wrapped ratings with background classes\n                        const ratingHtml = ratings.map(rating => {\n                            const clampedRating = Math.max(0, Math.min(5, rating)); // Ensure 0–5\n                            return `<span class=\"bg-rating-toc-${clampedRating}\">${clampedRating}</span>`;\n                        }).join('');\n\n                        $strong.prepend(ratingHtml+' ');\n                    }\n                });\n            },\n            fail: function(err) {\n                window.console.error(\"Could not fetch read URLs\", err);\n            }\n        }]);\n\n        }\n    };\n});\n"],"names":["define","$","Ajax","init","params","pageurl","window","location","pathname","search","call","methodname","args","courseid","done","result","urlRatingsMap","entries","forEach","entry","cleanUrl","replace","ratingvalues","each","fullpath","this","attr","ratingHtml","map","rating","clampedRating","Math","max","min","join","prepend","$strong","find","startsWith","substring","includes","chapterid","fail","err","console","error"],"mappings":"AAAAA,8CAAO,CAAC,SAAU,cAAc,SAASC,EAAGC,YACjC,CACHC,KAAM,SAASC,cACLC,QAAUC,OAAOC,SAASC,SAAWF,OAAOC,SAASE,OAC9DP,KAAKQ,KAAK,CAAC,CACRC,WAAY,sCACZC,KAAM,CAAEC,SAAUT,OAAOS,UACzBC,KAAM,SAASC,cAELC,cAAgB,GACtBD,OAAOE,QAAQC,SAAQC,cACbC,SAAWD,MAAMd,QAAQgB,QAAQ,OAAQ,IAC/CL,cAAcI,UAAYD,MAAMG,gBAGpCrB,EAAE,kBAAkBsB,MAAK,iBAEfC,SAAW,YADJvB,EAAEwB,MAAMC,KAAK,WAEtBV,cAAcQ,UAAW,OAInBG,WAHUX,cAAcQ,UAGHI,KAAIC,eACrBC,cAAgBC,KAAKC,IAAI,EAAGD,KAAKE,IAAI,EAAGJ,oDACTC,2BAAkBA,4BACxDI,KAAK,IAERjC,EAAEwB,MAAMU,QAAQR,WAAW,SAIrC1B,EAAE,+BAA+BsB,MAAK,iBAC7Ba,QAAUnC,EAAEwB,MAAMY,KAAK,cACtBjB,SAAWf,QAAQiC,WAAW,KAAOjC,QAAQkC,UAAU,GAAKlC,WAC3De,SAASoB,SAAS,eACnBpB,SAAWA,SAAW,cAAchB,OAAOqC,WAG9CzB,cAAcI,UAAW,OAIhBO,WAHUX,cAAcI,UAGHQ,KAAIC,eACrBC,cAAgBC,KAAKC,IAAI,EAAGD,KAAKE,IAAI,EAAGJ,oDACTC,2BAAkBA,4BACxDI,KAAK,IAERE,QAAQD,QAAQR,WAAW,UAIvCe,KAAM,SAASC,KACXrC,OAAOsC,QAAQC,MAAM,4BAA6BF"}